@page "/authors/"
@inject IAuthorRepository Repo
@*@inject HttpClient Client;*@

<h3 class="card-title">Index</h3>
<hr/>
<br/>

@if (Model == null)
{
	<LoadingMessage Message="Loading Data..."/>
}
else
{
<AuthorizeView Roles="Administrator">
	<a href="/authors/create" class="btn btn-primary">
		<span class="oi oi-plus"></span>
		Create new Author
	</a>
</AuthorizeView>

	@if (!Model.Any())
	{
		<LoadingMessage Message="there are no authors in the data store.
Click 'Create new Author' to begin"/>
	}
	else
	{
		<table class=" table table-responsive">
			<thead>
			<tr>
				<th>First Name</th>
				<th>Last Name</th>
				<th>Actions Name</th>
			</tr>
			</thead>
			<tbody>
			@foreach (var author in Model)
			{
				<tr>
					<td>@author.Firstname</td>
					<td>@author.Lastname</td>
					<td>
						<a href="/authors/view/@author.Id" class="btn btn-primary">
							<span class="oi oi-book"></span>
						</a>
						<AuthorizeView Roles="Administrator">
							<a href="/authors/edit/@author.Id" class="btn btn-warning">
								<span class="oi oi-pencil"></span>
							</a>
							<a href="/authors/delete/@author.Id" class="btn btn-danger">
								<span class="oi oi-delete"></span>
							</a>
						</AuthorizeView>
					</td>
				</tr>
			}
			</tbody>
		</table>
	}
}

@code {
	private IList<Author> Model;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			Model = await Repo.Get(Endpoints.AuthorsEndpoint);
			//Model = await Client.GetFromJsonAsync<IList<Author>>(Endpoints.AuthorsEndpoint);
			StateHasChanged();
		}
	}

}