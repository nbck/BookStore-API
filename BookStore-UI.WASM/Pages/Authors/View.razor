@page "/authors/view/{Id}"
@inject IAuthorRepository Repo
@inject NavigationManager NavManager
@inject IToastService ToastService

<h3 class="card-title">View Author details</h3>
<hr />
<br />

@if (_model == null)
{
	<LoadingMessage Message="Loading Author Details..." />
}
else
{
	<div class="col-md-4">
		<table class=" table table-responsive">
			<tr>
				<td>First Name</td>
				<td>@_model.Firstname</td>
			</tr>
			<tr>
				<td>Last Name</td>
				<td>@_model.Lastname</td>
			</tr>
			<tr>
				<td>Biography</td>
				<td>@_model.Bio</td>
			</tr>
		</table>
		<br />
		@if (_model.Books == null || !_model.Books.Any())
		{
			<div class="alert alert-dismissible alert-secondary">
				No books for this author
			</div>

		}
		else
		{
			<div class="card" style="width: 18rem;">
				<div class="card-header">
					Author's Books
				</div>
				<ul class="list-group list-group-flush">
					@foreach (var book in _model.Books)
					{
						<li class="list-group-item">@book.Title - @book.Price</li>
					}
				</ul>
			</div>
		}
	</div>
}
<br />

<AuthorizeView Roles="Administrator">
	<button @onclick="GoToEdit" class="btn btn-outline-warning">
		<span class="oi oi-pencil"></span>
		Edit Author
	</button>
	<button @onclick="GotoDelete" class="btn btn-outline-danger">
		<span class="oi oi-circle-x"></span>
		Delete Author
	</button>
</AuthorizeView>
<button @onclick="BackToList" class="btn btn-outline-secondary">
	<span class="oi oi-media-skip-backward"></span>
	Back to list
</button>

@code {
	[Parameter]
	public string Id { get; set; }

	private Author _model;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			var id = Convert.ToInt32(Id);
			_model = await Repo.Get(Endpoints.AuthorsEndpoint, id);
			ToastService.ShowInfo($"Now viewing {_model.Firstname} {_model.Lastname}", "");

			StateHasChanged();
		}
	}

	private void BackToList()
	{
		NavManager.NavigateTo("/authors/");
	}

	private void GoToEdit()
	{
		NavManager.NavigateTo($"/authors/edit/{Id}");
	}

	private void GotoDelete()
	{
		NavManager.NavigateTo($"/authors/delete/{Id}");
	}
}
