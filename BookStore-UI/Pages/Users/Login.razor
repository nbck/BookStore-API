@page "/login"

@inject IAuthenticationRepository authRepo;
@inject NavigationManager navMan;
@*<div class="card">*@
<h3 class="card-title">Login</h3>
<hr />
<br />

@if (!response)
{
	<ErrorMessage Message="Something went wrong with the login attempt" />
}
<EditForm Model="Model" OnValidSubmit="HandleLogin">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="form-group">
		<label for="email">Email address</label>
		<InputText Id="email" class="form-control" @bind-Value="Model.EmailAddress" />
		<ValidationMessage For="@(() => Model.EmailAddress)" />
	</div>
	<div class="form-group">
		<label for="password">Password</label>
		<InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
		<ValidationMessage For="@(() => Model.Password)" />
	</div>

	<button type="submit" class="btn btn-primary">Login</button>
</EditForm>
@*</div>*@

@code {
	readonly LoginModel Model = new LoginModel();
	bool response = true;

	private async Task HandleLogin()
	{
		response = await authRepo.Login(Model);
		if (response)
		{
			navMan.NavigateTo("/");
		}
	}

}